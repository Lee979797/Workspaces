package com.ninemax.jpa.code.action;

import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.util.List;

import org.apache.struts2.ServletActionContext;

import sun.jdbc.rowset.CachedRowSet;
import Decoder.BASE64Encoder;

import com.ninemax.jdbc.dao.DataAccess;
import com.ninemax.jpa.code.model.TBgk;
import com.ninemax.jpa.code.model.TFddbr;
import com.ninemax.jpa.code.model.TFrjl;
import com.ninemax.jpa.code.model.TFzdm;
import com.ninemax.jpa.code.model.TJgdm;
import com.ninemax.jpa.system.model.User;
import com.ninemax.jpa.util.ActionUtils;
import com.opensymphony.xwork2.ActionSupport;

public class TestAction extends ActionSupport {
	public String testA() {
		return new ActionUtils() {
			@Override
			protected void excute() throws Exception {

				System.out.println(database);
				TJgdm dm = em.find(TJgdm.class, jgdm.getTyshxydm());
				// 机构代码表
				System.out.println(dm);
				TFzdm fzdm = null;
				fzdm = em.find(TFzdm.class, jgdm.getTyshxydm());
				TBgk tb = null;
				// tb =em.find(TBgk.class, jgdm.getTyshxydm());
				System.out.println(jgdm.getTyshxydm());
				String result = null;
				String bbh = null;
				// 通过用户的行政区划去查版本号
				User user = (User) session.get("sysUser");
				bbh = user.getMemo();
				String xq = null;
				xq = user.getBzjgdm();
				System.out.println(bbh);
				try {
					String sql1 = "select memo from sc_xzqhdz model  where  model.dm  like '%"
							+ xq + "%' ";
					DataAccess dataObject1 = new DataAccess();
					CachedRowSet cs1 = dataObject1.query(sql1);
					String memo = null;
					while (cs1.next()) {
						memo = cs1.getString("memo").toString();
						// 将版本号传入前台，前台进行处理
						ServletActionContext.getRequest().setAttribute("memo",
								memo);
						System.out.println(memo + "aaaaaaaaaaaa");
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
				if (dm != null) {
					try {
						String path = dm.getFilePach() + dm.getImageurl();
						System.out.println(path);
						FileInputStream is = new FileInputStream(path);
						ByteArrayOutputStream output = new ByteArrayOutputStream();
						byte[] buffer = new byte[4098];
						int n = 0;
						while (-1 != (n = is.read(buffer))) {
							output.write(buffer, 0, n);
						}
						BASE64Encoder encoder = new BASE64Encoder();

						result = encoder.encode(output.toByteArray())
								.replaceAll("[\\s*\t\n\r]", "");
						System.out.println("返回页面数据：" + result);
						ServletActionContext.getRequest().setAttribute(
								"result", result);
					} catch (Exception e) {
						e.printStackTrace();

					}
					setMessage("代码主表");
					em.clear();
				}
				if (dm == null) {
					// 机构代码临时表
					// 机构代码注销表
					if (fzdm != null) {
						try {
							String path = fzdm.getFilePach()
									+ fzdm.getImageurl();
							System.out.println(path);
							FileInputStream is = new FileInputStream(path);
							ByteArrayOutputStream output = new ByteArrayOutputStream();
							byte[] buffer = new byte[4098];
							int n = 0;
							while (-1 != (n = is.read(buffer))) {
								output.write(buffer, 0, n);
							}
							BASE64Encoder encoder = new BASE64Encoder();

							result = encoder.encode(output.toByteArray())
									.replaceAll("[\\s*\t\n\r]", "");
							System.out.println("返回页面数据：" + result);
							ServletActionContext.getRequest().setAttribute(
									"result", result);
						} catch (Exception e) {
							e.printStackTrace();

						}
					}
				}
				if (dm == null) {
					// 机构代码临时表
					if (fzdm == null) {
						String sql = "select jgdm,FilePach,Imageurl from t_bgk model  where  model.Tyshxydm like '%"
								+ jgdm.getTyshxydm() + "%' ";

						System.out.println(sql + "11111111111111");

						DataAccess dataObject = new DataAccess();
						CachedRowSet cs = dataObject.query(sql);
						while (cs.next()) {
							String FilePach = cs.getString("FilePach")
									.toString();
							String Imageurl = cs.getString("Imageurl")
									.toString();
							// System.out.println(cs.getString("jgdm").toString());
							try {
								String path = FilePach + Imageurl;
								System.out.println(path);
								FileInputStream is = new FileInputStream(path);
								ByteArrayOutputStream output = new ByteArrayOutputStream();
								byte[] buffer = new byte[4098];
								int n = 0;
								while (-1 != (n = is.read(buffer))) {
									output.write(buffer, 0, n);
								}
								BASE64Encoder encoder = new BASE64Encoder();

								result = encoder.encode(output.toByteArray())
										.replaceAll("[\\s*\t\n\r]", "");
								System.out.println("返回页面数据：" + result);
								ServletActionContext.getRequest().setAttribute(
										"result", result);
							} catch (Exception e) {
								e.printStackTrace();
							}

						}
					}
				}
				List<TFddbr> fddbrList = em
						.createQuery(
								"from TFddbr model where model.tyshxydm=:tyshxydm")
						.setParameter("tyshxydm", jgdm.getTyshxydm())
						.getResultList();
				if (fddbrList.size() > 0) {
					fddbr = fddbrList.get(0);
					List<TFrjl> frjlList = em
							.createQuery(
									"from TFrjl model where model.frId=:frId")
							.setParameter("frId", fddbr.getLsh())
							.getResultList();
					if (frjlList.size() > 0) {
						frjl = frjlList.get(0);
					}
				}

				// listFzr= saveBus.fzrList(jgdm.getTyshxydm());

				setTitle("查询 &gt;&gt; 机构查询 &gt;&gt; 代码详细");
				currentPath = path + "show2.jsp";

			}
		}.template();
	}
}
